#######################    README    ########################################



The solution to question 2 comes with dockerfile that can be built.

This is to ensure all appropriate libraries are are installed in the
right version and that solutions run in the same environment under
same dependencies or libraries they were written. 

One need only to run the docker image called casestudy.
This automatically launches the notebook. 

This ensures compability issue and affords flexibilty


###### Using Docker ###########################################

###### To create the Docker image from the Dockerfile type:

docker build -t casestudy .

Should there be connection error do the following

sudo usermod -aG docker 'your username'
sudo service docker restart 

Then restart the system

This instructs docker to build an image using:


The current directory as the context from the last argument .
The Dockerfile as the recipe to create the image.
This is a convention from Docker.

casestudy as the resulting image tag.
Tags are used by Docker to designate images.

###### To run this image, you can type:

docker run --init --rm -it -p 8888:8888 casestudy


Using Docker, the notebook will not open itself, but you can
look at the output of the command to open it.
You should see something similar to:

[C 19:35:11.113 NotebookApp]

    Copy/paste this URL into your browser when you connect for the first time,
    to login with a token if token is set:

        http://(5d5ca0c4770d or 127.0.0.1):8888/?token=45c4630564334fa28299d7d7f39694f9be462c903a4eb084

	Just remove the 5d5ca0c4770d and copy paste this:

	http://127.0.0.1:8888/?token=45c4630564334fa28299d7d7f39694f9be462c903a4eb084


You can simply open the corresponding link or copy/paste it to access
the notebook.
Note: the token 0ed0... will not be the same.












